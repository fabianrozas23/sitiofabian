[{"/mnt/c/code/sitiofabian/src/index.js":"1","/mnt/c/code/sitiofabian/src/App.js":"2","/mnt/c/code/sitiofabian/src/Footer.js":"3","/mnt/c/code/sitiofabian/src/Inicio.js":"4","/mnt/c/code/sitiofabian/src/Validador.js":"5","/mnt/c/code/sitiofabian/src/Header.js":"6","/mnt/c/code/sitiofabian/src/rut.js":"7"},{"size":1451,"mtime":1607412021536,"results":"8","hashOfConfig":"9"},{"size":1286,"mtime":1607403363287,"results":"10","hashOfConfig":"9"},{"size":321,"mtime":1607403188911,"results":"11","hashOfConfig":"9"},{"size":923,"mtime":1607409457589,"results":"12","hashOfConfig":"9"},{"size":987,"mtime":1607412140200,"results":"13","hashOfConfig":"9"},{"size":379,"mtime":1607412750023,"results":"14","hashOfConfig":"9"},{"size":1509,"mtime":1607410660245,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ou3ymn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/mnt/c/code/sitiofabian/src/index.js",[],["32","33"],"/mnt/c/code/sitiofabian/src/App.js",[],"/mnt/c/code/sitiofabian/src/Footer.js",[],"/mnt/c/code/sitiofabian/src/Inicio.js",[],"/mnt/c/code/sitiofabian/src/Validador.js",[],"/mnt/c/code/sitiofabian/src/Header.js",[],"/mnt/c/code/sitiofabian/src/rut.js",["34"],"function clean (rut) {\n    return typeof rut === 'string'\n      ? rut.replace(/^0+|[^0-9kK]+/g, '').toUpperCase()\n      : ''\n  }\n  \n  function validate (rut) {\n    if (typeof rut !== 'string') {\n      return false\n    }\n    if (!/^0*(\\d{1,3}(\\.?\\d{3})*)-?([\\dkK])$/.test(rut)) {\n      return false\n    }\n  \n    rut = clean(rut)\n  \n    var t = parseInt(rut.slice(0, -1), 10)\n    var m = 0\n    var s = 1\n  \n    while (t > 0) {\n      s = (s + (t % 10) * (9 - m++ % 6)) % 11\n      t = Math.floor(t / 10)\n    }\n  \n    var v = s > 0 ? '' + (s - 1) : 'K'\n    return v === rut.slice(-1)\n  }\n  \n  function format (rut) {\n    rut = clean(rut)\n  \n    var result = rut.slice(-4, -1) + '-' + rut.substr(rut.length - 1)\n    for (var i = 4; i < rut.length; i += 3) {\n      result = rut.slice(-3 - i, -i) + '.' + result\n    }\n  \n    return result\n  }\n  \n  function getDigit (rut) {\n    rut = rut+\"\";\n    // type check\n    if (!rut || !rut.length || typeof rut !== 'string') {\n      return -1;\n    }\n    // serie numerica\n    var secuencia = [2,3,4,5,6,7,2,3];\n    var sum = 0;\n    //\n    for (var i=rut.length - 1; i >=0; i--) {\n        var d = rut.charAt(i)\n        sum += new Number(d)*secuencia[rut.length - (i + 1)];\n    };\n    // sum mod 11\n    var rest = 11 - (sum % 11);\n    // si es 11, retorna 0, sino si es 10 retorna K,\n    // en caso contrario retorna el numero\n    return rest === 11 ? 0 : rest === 10 ? \"K\" : rest;\n  }\n  \n  module.exports = { validate: validate, clean: clean, format: format, getDigit:getDigit}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":53,"column":16,"nodeType":"41","messageId":"42","endLine":53,"endColumn":29},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","no-global-assign","no-unsafe-negation"]